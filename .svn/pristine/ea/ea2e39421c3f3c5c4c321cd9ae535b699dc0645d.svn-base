package cn.com.taiji.sample.web;

import org.springframework.ui.Model;
import org.springframework.validation.Errors;

import cn.com.taiji.common.manager.ManagerException;
import cn.com.taiji.common.model.acl.UserModel;
import cn.com.taiji.common.pub.StringTools;
import cn.com.taiji.common.validation.MyViolationException;
import cn.com.taiji.sample.entity.User;
import cn.com.taiji.sample.entity.User.UserStatus;
import cn.com.taiji.sample.manager.LoginHelper;
import cn.com.taiji.sample.manager.acl.UserManager;

/**
 * @author Peream<br>
 *         邮箱：peream@gmail.com<br>
 *         创建日期：2008-3-28 下午01:59:51
 * @since 1.0
 * @version 1.0
 */
public class LoginValidator 
{
	public User validate(UserModel userModel,UserManager manager) throws ManagerException{
		MyViolationException mve = new MyViolationException();
		if (!StringTools.hasText(userModel.getUsername()))
			mve.addViolation("username", "用户名必填");
		if(!StringTools.hasText(userModel.getPassword()))
			mve.addViolation("password","密码必填");
		if(mve.hasViolation())throw mve;
		
		User loginUser = manager.findByLoginName(userModel.getUsername());
		if(loginUser==null){
			throw new MyViolationException("username","用户不存在");
		}
		if (loginUser.getStatus() == UserStatus.INVALID)
		{
			throw new MyViolationException("username","用户已停用");
		}
		if (!LoginHelper.isPassValid(userModel.getPassword(), loginUser))
		{
			throw new MyViolationException("password","密码错误");
		}
		return loginUser;
	}
	public void validate(UserModel loginUser, Errors errors, UserManager manager, Model model)
	{
		String name = loginUser.getUsername();
		String pwd = loginUser.getPassword();
		if (!StringTools.hasText(name))
		{
			errors.rejectValue("username", "acl.nameEmpty", "用户名不能为空");
			model.addAttribute("errorMsg", "用户名不能为空");
			return;
		}
		if (!StringTools.hasText(pwd))
		{
			errors.rejectValue("password", "acl.pwdEmpty", "密码不能为空");
			model.addAttribute("errorMsg", "密码不能为空");
			return;
		}
		User user = manager.findByLoginName(name);
		if (user == null)
		{
			errors.rejectValue("username", "acl.nouser", "用户不存在");
			model.addAttribute("errorMsg", "用户不存在");
			return;
		}
		if (user.getStatus() == UserStatus.INVALID)
		{
			errors.rejectValue("username", "acl.disabled", "用户已停用");
			model.addAttribute("errorMsg", "用户已停用");
			return;
		}
		if (!LoginHelper.isPassValid(pwd, user))
		{
			errors.rejectValue("password", "acl.passWrong", "密码错误");
			model.addAttribute("errorMsg", "密码错误");
			return;
		}
		// errors.reject("acl.test", "其他错误");
	}
}
